<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="LoquiSource"
    targetNamespace="http://tempuri.org/LoquiSource.xsd"
    elementFormDefault="qualified"
    xmlns="http://tempuri.org/LoquiSource.xsd"
    xmlns:mstns="http://tempuri.org/LoquiSource.xsd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:complexType name="ProtocolType" >
    <xs:attribute name="ProtocolID" type="xs:unsignedShort" use="required" >
      <xs:annotation>
        <xs:documentation>
          The ID of the protocol.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:element name="Loqui" type="LoquiType" />

  <xs:complexType name="LoquiType">
    <xs:annotation>
      <xs:documentation>
        The root node of a Loqui source document.
      </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="Protocol" type="ProtocolType" minOccurs="1" maxOccurs="1" >
          <xs:annotation>
            <xs:documentation>
              Used to define which protocol set this object is a part of.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="UniqueNamespace" type="xs:string" minOccurs="1" maxOccurs="1" >
          <xs:annotation>
            <xs:documentation>
              Unique namespace to define this object in.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Namespace" type="xs:string" minOccurs="1" maxOccurs="1" >
          <xs:annotation>
            <xs:documentation>
              Namespace to define this object in. Prefixed by default project namespace.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Object" type="ObjectType" minOccurs="0" maxOccurs="unbounded" >
          <xs:annotation>
            <xs:documentation>
              Define a new class object.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Struct" type="StructType" minOccurs="0" maxOccurs="unbounded" >
          <xs:annotation>
            <xs:documentation>
              Define a new struct object.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="FieldBatch" type="FieldBatch" minOccurs="0" maxOccurs="unbounded" >
          <xs:annotation>
            <xs:documentation>
              Define a new field batch object to contain reusable field chunks.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
    </xs:choice>
  </xs:complexType>

  <xs:simpleType name="NotifyingOption" final="restriction" >
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="HasBeenSet" />
      <xs:enumeration value="Notifying" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="LoquiInterfaceType" final="restriction" >
    <xs:restriction base="xs:string">
      <xs:enumeration value="Direct" />
      <xs:enumeration value="IGetter" />
      <xs:enumeration value="ISetter" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="SingletonLevel" final="restriction" >
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="NotNull" />
      <xs:enumeration value="Singleton" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="DisabledLevel" final="restriction" >
    <xs:restriction base="xs:string">
      <xs:enumeration value="Enabled" />
      <xs:enumeration value="SkipGeneration" />
      <xs:enumeration value="OmitEntirely" />
    </xs:restriction>
  </xs:simpleType>

  <xs:group name="FieldOptions">
    <xs:choice>
      <xs:element name="FieldBatch" type="FieldBatchPointer" />
      <xs:element name="UInt8" type="RangedUInt8" />
      <xs:element name="UInt16" type="RangedUInt16" />
      <xs:element name="UInt32" type="RangedUInt32" />
      <xs:element name="UInt64" type="RangedUInt64" />
      <xs:element name="Int8" type="RangedInt8" />
      <xs:element name="Int16" type="RangedInt16" />
      <xs:element name="Int32" type="RangedInt32" />
      <xs:element name="Int64" type="RangedInt64" />
      <xs:element name="UInt8Null" type="RangedUInt8" />
      <xs:element name="UInt16Null" type="RangedUInt16" />
      <xs:element name="UInt32Null" type="RangedUInt32" />
      <xs:element name="UInt64Null" type="RangedUInt64" />
      <xs:element name="Int8Null" type="RangedInt8" />
      <xs:element name="Int16Null" type="RangedInt16" />
      <xs:element name="Int32Null" type="RangedInt32" />
      <xs:element name="Int64Null" type="RangedInt64" />
      <xs:element name="P2Int" type="String" />
      <xs:element name="P2IntNull" type="String" />
      <xs:element name="P3Int" type="String" />
      <xs:element name="P3IntNull" type="String" />
      <xs:element name="P3Double" type="String" />
      <xs:element name="P3DoubleNull" type="String" />
      <xs:element name="Bool" type="Bool" />
      <xs:element name="BoolNull" type="Bool" />
      <xs:element name="Char" type="Char" />
      <xs:element name="CharNull" type="Char" />
      <xs:element name="RangeInt8" type="RangedUInt8" />
      <xs:element name="RangeInt8Null" type="RangedUInt8" />
      <xs:element name="RangeInt16" type="RangedUInt16" />
      <xs:element name="RangeInt16Null" type="RangedUInt16" />
      <xs:element name="RangeInt32" type="RangedUInt32" />
      <xs:element name="RangeInt32Null" type="RangedUInt32" />
      <xs:element name="RangeInt64" type="RangedUInt64" />
      <xs:element name="RangeInt64Null" type="RangedUInt64" />
      <xs:element name="RangeUInt8" type="RangedUInt8" />
      <xs:element name="RangeUInt8Null" type="RangedUInt8" />
      <xs:element name="RangeUInt16" type="RangedUInt16" />
      <xs:element name="RangeUInt16Null" type="RangedUInt16" />
      <xs:element name="RangeUInt32" type="RangedUInt32" />
      <xs:element name="RangeUInt32Null" type="RangedUInt32" />
      <xs:element name="RangeUInt64" type="RangedUInt64" />
      <xs:element name="RangeUInt64Null" type="RangedUInt64" />
      <xs:element name="RangeDouble" type="RangedFloat" />
      <xs:element name="RangeDoubleNull" type="RangedFloat" />
      <xs:element name="Percent" type="String" />
      <xs:element name="PercentNull" type="String" />
      <xs:element name="Float" type="RangedFloat" />
      <xs:element name="FloatNull" type="RangedFloat" />
      <xs:element name="UDouble" type="RangedFloat" />
      <xs:element name="UDoubleNull" type="RangedFloat" />
      <xs:element name="Double" type="RangedFloat" />
      <xs:element name="DoubleNull" type="RangedFloat" />
      <xs:element name="DateTime" type="DateTime" />
      <xs:element name="DateTimeNull" type="DateTime" />
      <xs:element name="Ref" type="Ref" />
      <xs:element name="List" type="List" />
      <xs:element name="Dict" type="Dict" />
      <xs:element name="Array2D" type="List" />
      <xs:element name="Enum" type="Enum" />
      <xs:element name="String" type="String" />
      <xs:element name="UnsafeObject" type="Object" >
        <xs:annotation>
          <xs:documentation>
            For if you want to generate a member of a type that is not supported by Loqui.  Not all features are ensured to work as intended.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Wildcard" type="Field" >
        <xs:annotation>
          <xs:documentation>
            Will accept any object, but will throw an exception if it's not Loqui friendly.  Friendly objects are generally any fields you can define as a member in a Loqui object.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:group>

  <xs:group name="NamedFieldOptions">
    <xs:choice>
      <xs:element name="FieldBatch" type="FieldBatchPointer" />
      <xs:element name="UInt8" type="NRangedUInt8" />
      <xs:element name="UInt16" type="NRangedUInt16" />
      <xs:element name="UInt32" type="NRangedUInt32" />
      <xs:element name="UInt64" type="NRangedUInt64" />
      <xs:element name="Int8" type="NRangedInt8" />
      <xs:element name="Int16" type="NRangedInt16" />
      <xs:element name="Int32" type="NRangedInt32" />
      <xs:element name="Int64" type="NRangedInt64" />
      <xs:element name="UInt8Null" type="NRangedUInt8" />
      <xs:element name="UInt16Null" type="NRangedUInt16" />
      <xs:element name="UInt32Null" type="NRangedUInt32" />
      <xs:element name="UInt64Null" type="NRangedUInt64" />
      <xs:element name="Int8Null" type="NRangedInt8" />
      <xs:element name="Int16Null" type="NRangedInt16" />
      <xs:element name="Int32Null" type="NRangedInt32" />
      <xs:element name="Int64Null" type="NRangedInt64" />
      <xs:element name="P2Int" type="NString" />
      <xs:element name="P2IntNull" type="NString" />
      <xs:element name="P3Int" type="NString" />
      <xs:element name="P3IntNull" type="NString" />
      <xs:element name="P3Double" type="NString" />
      <xs:element name="P3DoubleNull" type="NString" />
      <xs:element name="P4Double" type="NString" />
      <xs:element name="P4DoubleNull" type="NString" />
      <xs:element name="Dimension2D" type="NString" />
      <xs:element name="Dimension2DNull" type="NString" />
      <xs:element name="Bounding2D" type="NString" />
      <xs:element name="Bounding2DNull" type="NString" />
      <xs:element name="Bool" type="NBool" />
      <xs:element name="BoolNull" type="NBool" />
      <xs:element name="Char" type="NChar" />
      <xs:element name="CharNull" type="NChar" />
      <xs:element name="Random" type="NField" />
      <xs:element name="RangeInt8" type="NRangedUInt8" />
      <xs:element name="RangeInt8Null" type="NRangedUInt8" />
      <xs:element name="RangeInt16" type="NRangedUInt16" />
      <xs:element name="RangeInt16Null" type="NRangedUInt16" />
      <xs:element name="RangeInt32" type="NRangedUInt32" />
      <xs:element name="RangeInt32Null" type="NRangedUInt32" />
      <xs:element name="RangeInt64" type="NRangedUInt64" />
      <xs:element name="RangeInt64Null" type="NRangedUInt64" />
      <xs:element name="RangeUInt8" type="NRangedUInt8" />
      <xs:element name="RangeUInt8Null" type="NRangedUInt8" />
      <xs:element name="RangeUInt16" type="NRangedUInt16" />
      <xs:element name="RangeUInt16Null" type="NRangedUInt16" />
      <xs:element name="RangeUInt32" type="NRangedUInt32" />
      <xs:element name="RangeUInt32Null" type="NRangedUInt32" />
      <xs:element name="RangeUInt64" type="NRangedUInt64" />
      <xs:element name="RangeUInt64Null" type="NRangedUInt64" />
      <xs:element name="RangeDouble" type="NRangedFloat" />
      <xs:element name="RangeDoubleNull" type="NRangedFloat" />
      <xs:element name="Percent" type="NString" />
      <xs:element name="PercentNull" type="NString" />
      <xs:element name="Float" type="NRangedFloat" />
      <xs:element name="FloatNull" type="NRangedFloat" />
      <xs:element name="UDouble" type="NRangedFloat" />
      <xs:element name="UDoubleNull" type="NRangedFloat" />
      <xs:element name="Double" type="NRangedFloat" />
      <xs:element name="DoubleNull" type="NRangedFloat" />
      <xs:element name="DateTime" type="NDateTime" />
      <xs:element name="DateTimeNull" type="NDateTime" />
      <xs:element name="Ref" type="NRef" />
      <xs:element name="List" type="NList" />
      <xs:element name="Dict" type="NDict" />
      <xs:element name="Array2D" type="NList" />
      <xs:element name="Enum" type="NEnum" />
      <xs:element name="String" type="NString" />
      <xs:element name="UnsafeObject" type="Object" >
        <xs:annotation>
          <xs:documentation>
            For if you want to generate a member of a type that is not supported by Loqui.  Not all features are ensured to work as intended.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Wildcard" type="NField" >
        <xs:annotation>
          <xs:documentation>
            Will accept any object, but will throw an exception if it's not Loqui friendly.  Friendly objects are generally any fields you can define as a member in a Loqui object.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:group>

  <xs:complexType name="FieldBatch">
    <xs:choice minOccurs="0" maxOccurs="unbounded" >
      <xs:element name="Fields" type="FieldsType" minOccurs="0" maxOccurs="1" />
      <xs:element name="Generic" type="Generic" minOccurs="0" maxOccurs="unbounded" >
        <xs:annotation>
          <xs:documentation>
            The generic symbols to define in the object.  These can be used/referenced by fields.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
    <xs:attribute name="name" type="xs:string" use="required" >
      <xs:annotation>
        <xs:documentation>
          The name this object should have.  This needs to be unique per protocol.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="StructType">
    <xs:choice minOccurs="0" maxOccurs="unbounded" >
      <xs:element name="Interface" type="xs:string" minOccurs="0" maxOccurs="1" >
        <xs:annotation>
          <xs:documentation>
            Define an interface this object should have.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Fields" type="FieldsType" minOccurs="0" maxOccurs="1" />
      <xs:element name="Namespaces" type="Namespaces" minOccurs="0" maxOccurs="1" />
      <xs:element name="Generic" type="Generic" minOccurs="0" maxOccurs="unbounded" >
        <xs:annotation>
          <xs:documentation>
            The generic symbols to define in the object.  These can be used/referenced by fields.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
    <xs:attribute name="name" type="xs:string" use="required" >
      <xs:annotation>
        <xs:documentation>
          The name this object should have.  This needs to be unique per protocol.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="publicCtor" type="xs:boolean" >
      <xs:annotation>
        <xs:documentation>
          Whether to expose the basic ctor to the public.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="generateToString" type="xs:boolean" >
      <xs:annotation>
        <xs:documentation>
          Whether to generate the ToString method.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="GUID" type="xs:string" >
      <xs:annotation>
        <xs:documentation>
          TYPICALLY AUTOGENERATED.  Unique GUID for the object.  Will be generated if missing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ID" type="xs:string" >
      <xs:annotation>
        <xs:documentation>
          TYPICALLY AUTOGENERATED.  Unique ushort ID for the object.  Will be generated if missing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="version" type="xs:unsignedShort">
      <xs:annotation>
        <xs:documentation>
          The version this message is.  Increment to define a new version old ones can upgrade to.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="disable" type="DisabledLevel">
      <xs:annotation>
        <xs:documentation>
          Whether to skip this object while generating
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="ObjectType">
    <xs:choice minOccurs="0" maxOccurs="unbounded" >
      <xs:element name="Interface" type="xs:string" minOccurs="0" maxOccurs="1" >
        <xs:annotation>
          <xs:documentation>
            Define an interface this object should have.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Fields" type="FieldsType" minOccurs="0" maxOccurs="1" />
      <xs:element name="Namespaces" type="Namespaces" minOccurs="0" maxOccurs="1" />
      <xs:element name="Generic" type="Generic" minOccurs="0" maxOccurs="unbounded" >
        <xs:annotation>
          <xs:documentation>
            The generic symbols to define in the object.  These can be used/referenced by fields.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BaseGeneric" type="DefinedBaseGeneric" minOccurs="0" maxOccurs="unbounded" >
        <xs:annotation>
          <xs:documentation>
            Define a generic symbol from the base class.  To be used when base class has generics.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
    <xs:attribute name="name" type="xs:string" use="required" >
      <xs:annotation>
        <xs:documentation>
          The name this object should have.  This needs to be unique per protocol.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="baseClass" type="xs:string" >
      <xs:annotation>
        <xs:documentation>
          Loqui name of the class to inherit from.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="abstract" type="xs:boolean" >
      <xs:annotation>
        <xs:documentation>
          Whether to mark object as abstract
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="generateToString" type="xs:boolean" >
      <xs:annotation>
        <xs:documentation>
          Whether to generate the ToString method.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="publicCtor" type="xs:boolean" >
      <xs:annotation>
        <xs:documentation>
          Whether to expose the basic ctor to the public.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="notifyingDefault" type="NotifyingOption" >
      <xs:annotation>
        <xs:documentation>
          Sets the default value of the "Notifying" property on all of this objects contained fields.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="raisePropertyChangedDefault" type="xs:boolean" >
      <xs:annotation>
        <xs:documentation>
          Sets the default value of the "Raise Property Changed" property on all of this objects contained fields.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="interfaceTypeDefault" type="LoquiInterfaceType" >
      <xs:annotation>
        <xs:documentation>
          Sets the default value of the Interface Type property on all of this objects contained fields.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="protectedDefault" type="xs:boolean" >
      <xs:annotation>
        <xs:documentation>
          Sets the default value of the protected property on all of this objects contained fields.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="derivativeDefault" type="xs:boolean" >
      <xs:annotation>
        <xs:documentation>
          Sets the default value of the derivative property on all of this objects contained fields.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="GUID" type="xs:string" >
      <xs:annotation>
        <xs:documentation>
          TYPICALLY AUTOGENERATED.  Unique GUID for the object.  Will be generated if missing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ID" type="xs:string" >
      <xs:annotation>
        <xs:documentation>
          TYPICALLY AUTOGENERATED.  Unique ushort ID for the object.  Will be generated if missing.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:attribute name="allowBaseRecords" type="xs:boolean">
    <xs:annotation>
      <xs:documentation>
        Whether to generate base record systems.  Defaults to true
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:complexType name="UniqueNamespaces">
    <xs:annotation>
      <xs:documentation>
        Collection of extra namespaces to import.
      </xs:documentation>
    </xs:annotation>
    <xs:choice >
      <xs:element name="Namespace" type="xs:string" minOccurs="0" maxOccurs="1" >
        <xs:annotation>
          <xs:documentation>
            Extra namespace to import. Fully qualified.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
    <xs:attribute name="allowBaseRecords" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>
          Whether to generate base record systems.  Defaults to true
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="version" type="xs:unsignedShort">
      <xs:annotation>
        <xs:documentation>
          The version this message is.  Increment to define a new version old ones can upgrade to.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="disable" type="DisabledLevel">
      <xs:annotation>
        <xs:documentation>
          Whether to skip this object while generating
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="Namespaces">
    <xs:annotation>
      <xs:documentation>
        Collection of extra namespaces to import.
      </xs:documentation>
    </xs:annotation>
    <xs:choice >
      <xs:element name="Namespace" type="xs:string" minOccurs="0" maxOccurs="1" >
        <xs:annotation>
          <xs:documentation>
            Extra namespace to import. Prefixed by project namespace.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="Generic">
    <xs:annotation>
      <xs:documentation>
        A definition of a generic symbol.
      </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="1">
      <xs:element name="Where" type="xs:string" minOccurs="1" maxOccurs="unbounded" >
        <xs:annotation>
          <xs:documentation>
            Any extra "where" definitions that the generic needs to follow
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
    <xs:attribute name="name" type="xs:string" use="required" >
      <xs:annotation>
        <xs:documentation>
          Generic symbol to use.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="DefinedBaseGeneric">
    <xs:annotation>
      <xs:documentation>
        A definition of a generic symbol.
      </xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="1">
      <xs:element name="Where" type="xs:string" minOccurs="1" maxOccurs="unbounded" >
        <xs:annotation>
          <xs:documentation>
            Any extra "where" definitions that the generic needs to follow
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Defined" type="xs:string" minOccurs="1" maxOccurs="1" />
    </xs:choice>
    <xs:attribute name="name" type="xs:string" use="required" >
      <xs:annotation>
        <xs:documentation>
          Generic symbol to use.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="Generics">
    <xs:choice minOccurs="0" maxOccurs="unbounded" >
      <xs:element name="Generic" type="Generic" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="FieldsType" >
    <xs:annotation>
      <xs:documentation>
        Node which all field definitions will reside.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:group ref="NamedFieldOptions" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="SingleFieldOption" >
    <xs:sequence>
      <xs:group ref="FieldOptions" minOccurs="1" maxOccurs="1" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="KeyedValue" >
    <xs:sequence>
      <xs:element name="Ref" type="Ref" />
    </xs:sequence>
    <xs:attribute name="keyAccessor" use="required" />
  </xs:complexType>

  <xs:complexType name="Field" >
    <xs:attribute name="comment" >
      <xs:annotation>
        <xs:documentation>
          Comment text to add to the defined field member.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="keyField" type="xs:boolean" >
      <xs:annotation>
        <xs:documentation>
          Determines whether it is a key field which will be included in the equals/hash.  If no fields are marked as key, then all are.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="derivative" type="xs:boolean" >
      <xs:annotation>
        <xs:documentation>
          Marks the field as read-only from the public.  It can only be set from inside the class.

          This field is different from being marked protected because it will NOT be exported.  It only exists in the class definition, never on-disk.

          If a field is marked derivative, it is implicitly marked protected as well.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="protected" type="xs:boolean" >
      <xs:annotation>
        <xs:documentation>
          Marks the field as read-only from the public.  It can only be set from inside the class.

          This field is different from being marked derivative because it WILL be exported.  It exists in the class definition, AND on-disk.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="notifying" type="NotifyingOption" >
      <xs:annotation>
        <xs:documentation>
          Whether the field should be Notifying and can be subscribed to.  By default this is true.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="raisePropertyChanged" type="xs:boolean" >
      <xs:annotation>
        <xs:documentation>
          Whether the field should utilize RaisePropertyChanged interface.  By default this is true.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="generateClassMembers" type="xs:boolean" >
      <xs:annotation>
        <xs:documentation>
          If false, only the interface member will be defined.  The actual class member will be left up to the user to implement.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="NField" >
    <xs:complexContent>
      <xs:extension base="Field">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="String" >
    <xs:complexContent>
      <xs:extension base="Field">
        <xs:attribute name="default" type="xs:string" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NString" >
    <xs:complexContent>
      <xs:extension base="String">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="FieldBatchPointer" >
    <xs:attribute name="name" type="xs:string" use="required" >
      <xs:annotation>
        <xs:documentation>
          Name of the field batch object to reference.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="protocolID" type="xs:unsignedShort" >
      <xs:annotation>
        <xs:documentation>
          Protocol of the field batch object to reference.  Omittion assumes the same protocol as the current object.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="RangedInt8" >
    <xs:complexContent>
      <xs:extension base="Field">
        <xs:attribute name="default" type="xs:string" />
        <xs:attribute name="min" type="xs:short" />
        <xs:attribute name="max" type="xs:short" />
        <xs:attribute name="rangeThrowException" type="xs:boolean" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NRangedInt8" >
    <xs:complexContent>
      <xs:extension base="RangedInt8">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="RangedInt16" >
    <xs:complexContent>
      <xs:extension base="Field">
        <xs:attribute name="default" type="xs:string" />
        <xs:attribute name="min" type="xs:short" />
        <xs:attribute name="max" type="xs:short" />
        <xs:attribute name="rangeThrowException" type="xs:boolean" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NRangedInt16" >
    <xs:complexContent>
      <xs:extension base="RangedInt16">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="RangedInt32" >
    <xs:complexContent>
      <xs:extension base="Field">
        <xs:attribute name="default" type="xs:string" />
        <xs:attribute name="min" type="xs:int" />
        <xs:attribute name="max" type="xs:int" />
        <xs:attribute name="rangeThrowException" type="xs:boolean" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NRangedInt32" >
    <xs:complexContent>
      <xs:extension base="RangedInt32">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="RangedInt64" >
    <xs:complexContent>
      <xs:extension base="Field">
        <xs:attribute name="default" type="xs:string" />
        <xs:attribute name="min" type="xs:long" />
        <xs:attribute name="max" type="xs:long" />
        <xs:attribute name="rangeThrowException" type="xs:boolean" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NRangedInt64" >
    <xs:complexContent>
      <xs:extension base="RangedInt64">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="RangedUInt8" >
    <xs:complexContent>
      <xs:extension base="Field">
        <xs:attribute name="default" type="xs:string" />
        <xs:attribute name="min" type="xs:byte" />
        <xs:attribute name="max" type="xs:byte" />
        <xs:attribute name="rangeThrowException" type="xs:boolean" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NRangedUInt8" >
    <xs:complexContent>
      <xs:extension base="RangedUInt8">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="RangedUInt16" >
    <xs:complexContent>
      <xs:extension base="Field">
        <xs:attribute name="default" type="xs:string" />
        <xs:attribute name="min" type="xs:unsignedShort" />
        <xs:attribute name="max" type="xs:unsignedShort" />
        <xs:attribute name="rangeThrowException" type="xs:boolean" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NRangedUInt16" >
    <xs:complexContent>
      <xs:extension base="RangedUInt16">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="RangedUInt32" >
    <xs:complexContent>
      <xs:extension base="Field">
        <xs:attribute name="default" type="xs:string" />
        <xs:attribute name="min" type="xs:unsignedInt" />
        <xs:attribute name="max" type="xs:unsignedInt" />
        <xs:attribute name="rangeThrowException" type="xs:boolean" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NRangedUInt32" >
    <xs:complexContent>
      <xs:extension base="RangedUInt32">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="RangedUInt64" >
    <xs:complexContent>
      <xs:extension base="Field">
        <xs:attribute name="default" type="xs:string" />
        <xs:attribute name="min" type="xs:unsignedLong" />
        <xs:attribute name="max" type="xs:unsignedLong" />
        <xs:attribute name="rangeThrowException" type="xs:boolean" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NRangedUInt64" >
    <xs:complexContent>
      <xs:extension base="RangedUInt64">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="RangedFloat" >
    <xs:complexContent>
      <xs:extension base="Field">
        <xs:attribute name="default" type="xs:string" />
        <xs:attribute name="min" type="xs:float" />
        <xs:attribute name="max" type="xs:float" />
        <xs:attribute name="rangeThrowException" type="xs:boolean" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NRangedFloat" >
    <xs:complexContent>
      <xs:extension base="RangedFloat">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="RefDirect" >
    <xs:choice>
      <xs:element type="xs:string"  name="Generic" minOccurs="0" maxOccurs="unbounded" >
        <xs:annotation>
          <xs:documentation>
            The generic symbols to define in the object.  These can be used/referenced by fields.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
    <xs:attribute name="refName" use="required">
      <xs:annotation>
        <xs:documentation>
          Name of the Loqui object to reference.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="interfaceType" type="LoquiInterfaceType">
      <xs:annotation>
        <xs:documentation>
          What type of reference interface to use.  Direct reference to Loqui object type, or one of the interfaces.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="Ref" >
    <xs:annotation>
      <xs:documentation>
        Creates a single member reference to another Loqui object type.
      </xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="Direct" type="RefDirect">
        <xs:annotation>
          <xs:documentation>
            Direct reference to another Loqui type.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Generic" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            Name of generic to reference.  The generic will enforce that it's a Loqui object.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
    <xs:attribute name="singleton" type="SingletonLevel" >
      <xs:annotation>
        <xs:documentation>
          Designates the singleton level of a ref.  If not null, if ever set to null, it will create a new instance instead.  If singleton, it will instantiate one singleton instance that can never point to another instance.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="NRef" >
    <xs:complexContent>
      <xs:extension base="Ref">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Object" >
    <xs:complexContent>
      <xs:extension base="Field">
        <xs:choice>
          <xs:element name="TargetType" type="xs:string" />
        </xs:choice>
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NObject" >
    <xs:complexContent>
      <xs:extension base="Ref">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Enum" >
    <xs:complexContent>
      <xs:extension base="Field">
        <xs:attribute name="default" type="xs:string" />
        <xs:attribute name="enumName" type="xs:string" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NEnum" >
    <xs:complexContent>
      <xs:extension base="Enum">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Bool" >
    <xs:complexContent>
      <xs:extension base="Field">
        <xs:attribute name="default" type="xs:boolean" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NBool" >
    <xs:complexContent>
      <xs:extension base="Bool">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="DateTime" >
    <xs:complexContent>
      <xs:extension base="Field">
        <xs:attribute name="default" type="xs:date" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NDateTime" >
    <xs:complexContent>
      <xs:extension base="Bool">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Char" >
    <xs:complexContent>
      <xs:extension base="Field">
        <xs:attribute name="default" type="CharString"  />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NChar" >
    <xs:complexContent>
      <xs:extension base="Char">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="CharString">
    <xs:restriction base="xs:string">
      <xs:maxLength value="1" />
      <xs:minLength value="1" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="List" >
    <xs:complexContent>
      <xs:extension base="Field">
        <xs:group ref="FieldOptions" minOccurs="1" maxOccurs="1" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NList" >
    <xs:complexContent>
      <xs:extension base="List">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Dict" >
    <xs:complexContent>
      <xs:extension base="Field">
        <xs:choice minOccurs="1" maxOccurs="1" >
          <xs:sequence>
            <xs:element name="Key" type="SingleFieldOption" />
            <xs:element name="Value" type="SingleFieldOption" />
          </xs:sequence>
          <xs:sequence>
            <xs:element name="KeyedValue" type="KeyedValue" />
          </xs:sequence>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NDict" >
    <xs:complexContent>
      <xs:extension base="Dict">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

</xs:schema>
